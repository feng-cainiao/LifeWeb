<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="newswebsite.dao.ReplyMapper">
  <resultMap id="map1" type="newswebsite.pojo.Reply">
    <id column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="news_nid" jdbcType="INTEGER" property="newsNid" />
    <result column="replyuser_id" jdbcType="INTEGER" property="replyuserId" />
    <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
    <result column="reply_approve" jdbcType="INTEGER" property="replyApprove" />
    <result column="commentuser_id" jdbcType="INTEGER" property="commentuserId" />
    <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime" />
    <association property="user" javaType="newswebsite.pojo.User">
      <id column="user_id" jdbcType="INTEGER" property="userId" />
      <result column="user_name" jdbcType="VARCHAR" property="userName" />
      <result column="user_telephone" jdbcType="VARCHAR" property="userTelephone" />
      <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    </association>
  </resultMap>
  <select id="select_reply" parameterType="java.lang.Integer" resultMap="map1">
     SELECT *
    FROM info_news_reply r ,info_news_user u
    WHERE r.`replyuser_id`=u.`user_id`and r.`news_nid`=#{newsId,jdbcType=INTEGER}
  </select>

  <resultMap id="map2" type="newswebsite.pojo.ReplyTest">
    <id column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="news_nid" jdbcType="INTEGER" property="newsNid" />
    <result column="replyuser_id" jdbcType="INTEGER" property="replyuserId" />
    <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
    <result column="reply_approve" jdbcType="INTEGER" property="replyApprove" />
    <result column="commentuser_id" jdbcType="INTEGER" property="commentuserId" />
    <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime" />
    <result column="news_nid" jdbcType="INTEGER" property="newsNid" />
    <result column="replyname" jdbcType="VARCHAR" property="replyname" />
    <result column="commentuser" jdbcType="VARCHAR" property="commentuser" />
  </resultMap>
  <select id="select_reply1" parameterType="java.lang.Integer" resultMap="map2">
      SELECT t1.`reply_id`,t1.`comment_id`,t1.`replyuser_id`,t1.`reply_content`,t1.`reply_approve`,t1.`commentuser_id`,t1.`reply_time`,
      t1.`news_nid`,t1.replyname, commentuser
      FROM (
       SELECT DISTINCT(t0.`reply_id`),t0.`comment_id`,t0.`replyuser_id`,t0.`reply_content`,t0.`reply_approve`,t0.`commentuser_id`,t0.`reply_time`,
      t0.`news_nid`,t0.replyname,u1.`user_name` AS commentuser
        FROM
          (
             SELECT r.`reply_id` ,r.`comment_id`,r.`replyuser_id`,r.`reply_content`,r.`reply_approve`,r.`commentuser_id`,r.`reply_time`
              ,r.`news_nid`,u.`user_name` AS replyname
             FROM info_news_reply r,info_news_user u
             WHERE r.`replyuser_id`=u.`user_id`
          )t0,info_news_user u1
          WHERE t0.`commentuser_id`=u1.`user_id`
        UNION ALL
        SELECT DISTINCT(t0.`reply_id`),t0.`comment_id`,t0.`replyuser_id`,t0.`reply_content`,t0.`reply_approve`,t0.`commentuser_id`,t0.`reply_time`,
        t0.`news_nid`,t0.replyname,'' AS commentuser
        FROM
          (
             SELECT r.`reply_id` ,r.`comment_id`,r.`replyuser_id`,r.`reply_content`,r.`reply_approve`,r.`commentuser_id`,r.`reply_time`
              ,r.`news_nid`,u.`user_name` AS replyname
             FROM info_news_reply r,info_news_user u
             WHERE r.`replyuser_id`=u.`user_id` AND r.`commentuser_id`=0
          )t0
      )t1
      ORDER BY t1.`reply_time` ASC
  </select>

  <insert id="insert_reply" parameterType="newswebsite.pojo.Reply">
    insert into info_news_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="replyuserId != null">
        replyuser_id,
      </if>
      <if test="replyContent != null">
        reply_content,
      </if>
      <if test="replyApprove != null">
        reply_approve,
      </if>
      <if test="commentuserId != null">
        commentuser_id,
      </if>
      <if test="replyTime != null">
        reply_time,
      </if>
      <if test="newsNid != null">
        news_nid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="replyId != null">
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyuserId != null">
        #{replyuserId,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyApprove != null">
        #{replyApprove,jdbcType=INTEGER},
      </if>
      <if test="commentuserId != null">
        #{commentuserId,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null">
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsNid != null">
        #{newsNid,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="update_approve" parameterType="java.lang.String">
    UPDATE info_news_reply r
    SET r.`reply_approve`=r.`reply_approve`+1
    WHERE r.`reply_id` IN
    <foreach collection="array"  item="tagId" index="index"
             open="(" close=")" separator=",">
      #{tagId}
    </foreach>
  </update>




  <resultMap id="BaseResultMap" type="newswebsite.pojo.Reply">
    <id column="reply_id" jdbcType="INTEGER" property="replyId" />
    <result column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="replyuser_id" jdbcType="INTEGER" property="replyuserId" />
    <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
    <result column="reply_approve" jdbcType="INTEGER" property="replyApprove" />
    <result column="commentuser_id" jdbcType="INTEGER" property="commentuserId" />
    <result column="reply_time" jdbcType="TIMESTAMP" property="replyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reply_id, comment_id, replyuser_id, reply_content, reply_approve, commentuser_id, 
    reply_time
  </sql>
  <select id="selectByExample" parameterType="newswebsite.pojo.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info_news_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from info_news_reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from info_news_reply
    where reply_id = #{replyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="newswebsite.pojo.ReplyExample">
    delete from info_news_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="newswebsite.pojo.Reply">
    insert into info_news_reply (reply_id, comment_id, replyuser_id, 
      reply_content, reply_approve, commentuser_id, 
      reply_time)
    values (#{replyId,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{replyuserId,jdbcType=INTEGER}, 
      #{replyContent,jdbcType=VARCHAR}, #{replyApprove,jdbcType=INTEGER}, #{commentuserId,jdbcType=INTEGER}, 
      #{replyTime,jdbcType=TIMESTAMP})
  </insert>

  <select id="countByExample" parameterType="newswebsite.pojo.ReplyExample" resultType="java.lang.Long">
    select count(*) from info_news_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update info_news_reply
    <set>
      <if test="record.replyId != null">
        reply_id = #{record.replyId,jdbcType=INTEGER},
      </if>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.replyuserId != null">
        replyuser_id = #{record.replyuserId,jdbcType=INTEGER},
      </if>
      <if test="record.replyContent != null">
        reply_content = #{record.replyContent,jdbcType=VARCHAR},
      </if>
      <if test="record.replyApprove != null">
        reply_approve = #{record.replyApprove,jdbcType=INTEGER},
      </if>
      <if test="record.commentuserId != null">
        commentuser_id = #{record.commentuserId,jdbcType=INTEGER},
      </if>
      <if test="record.replyTime != null">
        reply_time = #{record.replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update info_news_reply
    set reply_id = #{record.replyId,jdbcType=INTEGER},
      comment_id = #{record.commentId,jdbcType=INTEGER},
      replyuser_id = #{record.replyuserId,jdbcType=INTEGER},
      reply_content = #{record.replyContent,jdbcType=VARCHAR},
      reply_approve = #{record.replyApprove,jdbcType=INTEGER},
      commentuser_id = #{record.commentuserId,jdbcType=INTEGER},
      reply_time = #{record.replyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="newswebsite.pojo.Reply">
    update info_news_reply
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=INTEGER},
      </if>
      <if test="replyuserId != null">
        replyuser_id = #{replyuserId,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        reply_content = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyApprove != null">
        reply_approve = #{replyApprove,jdbcType=INTEGER},
      </if>
      <if test="commentuserId != null">
        commentuser_id = #{commentuserId,jdbcType=INTEGER},
      </if>
      <if test="replyTime != null">
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="newswebsite.pojo.Reply">
    update info_news_reply
    set comment_id = #{commentId,jdbcType=INTEGER},
      replyuser_id = #{replyuserId,jdbcType=INTEGER},
      reply_content = #{replyContent,jdbcType=VARCHAR},
      reply_approve = #{replyApprove,jdbcType=INTEGER},
      commentuser_id = #{commentuserId,jdbcType=INTEGER},
      reply_time = #{replyTime,jdbcType=TIMESTAMP}
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
</mapper>